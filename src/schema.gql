# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Alert {
  account_identifier: String!
  account_name: String!
  batch_id: String!
  created_at: DateTime!
  description: String!
  id: Int!
  platform_type: String!
  popularity: Int!
  post_ids: [String!]!
  screen_name: String!
  sentiment: String!
  severity: String!
  tickers: [JSON!]
  title: String!
  updated_at: DateTime!
  uuid: ID!
}

enum AuthProviderType {
  email
  facebook
  google
  phone
  sms
  telegram
  twitter
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Identity {
  access_token: String
  created_at: DateTime!
  expires_at: Int
  id: Int!
  notification_channels: [NotificationChannelType!]
  password: String
  provider: AuthProviderType!
  provider_id: String
  refresh_token: String
  updated_at: DateTime!
  user: User
  user_uuid: String!
  uuid: ID!
  verification_tokens: [VerificationToken!]
  verified: Boolean!
}

"""JSON custom scalar type"""
scalar JSON

type MediaSubscription {
  account_identifier: String!
  created_at: DateTime!
  enabled: Boolean!
  id: Int!
  meta: JSON
  platform_type: PlatformType!
  screen_name: String
  updated_at: DateTime!
  user: User
  user_uuid: String!
  uuid: ID!
}

type NotificationChannel {
  channel: NotificationChannelType!
  client_identifier: String
  created_at: DateTime!
  enabled: Boolean!
  id: Int!
  identity: Identity
  identity_id: String
  updated_at: DateTime!
  user: User
  user_uuid: String!
  uuid: String!
  verified: Boolean!
  web_push_config: String
}

enum NotificationChannelType {
  discord
  email
  phone
  push
  slack
  sms
  telegram
  web
  whatsapp
}

type PaginatedUserAlerts {
  data: [UserAlert!]!
  pagination: PaginationInfo!
}

type PaginationInfo {
  hasMore: Boolean!
  limit: Int!
  page: Int!
  total: Int!
}

enum PlatformType {
  news
  reddit
  twitter
  youtube
}

type Query {
  user: User
}

type TrackedItem {
  created_at: DateTime!
  enabled: Boolean!
  id: Int!
  item_identifier: String!
  item_type: TrackedItemType!
  meta: JSON
  updated_at: DateTime!
  user_uuid: String!
  uuid: String!
}

enum TrackedItemType {
  commodity
  crypto
  keyword
  stock
}

type User {
  counts: UserCounts!
  created_at: DateTime!
  email: String
  id: Int!
  identities: [Identity!]
  media_subscriptions(enabled: Boolean): [MediaSubscription!]
  notification_channels(enabled: Boolean): [NotificationChannel!]
  phone: String
  tracked_items(enabled: Boolean): [TrackedItem!]
  updated_at: DateTime!
  user_alerts(account_identifier: String, limit: Int, order_by: String, page: Int, platform_type: PlatformType, popularity: String, sentiment: String, severity: String, tickers: [String!]): PaginatedUserAlerts
  uuid: ID!
}

type UserAlert {
  alert: Alert!
  alert_id: Int!
  created_at: DateTime!
  id: Int!
  notification_channels: [NotificationChannelType!]
  updated_at: DateTime!
  user: User!
  user_uuid: ID!
  uuid: ID!
}

type UserCounts {
  media_subscriptions_count: Int!
  notification_channels_count: Int!
  tracked_items_count: Int!
  user_alerts_count: Int!
}

type VerificationToken {
  created_at: DateTime!
  expires_at: DateTime
  id: Int!
  identity: Identity
  identity_uuid: String
  state: String!
  token: String!
  type: AuthProviderType!
  updated_at: DateTime!
  user: User
  user_uuid: String
  uuid: ID!
}